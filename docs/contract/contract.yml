openapi: 3.0.3
info:
  title: TICKETEK - Event Management API
  description: |2

        API for managing events and registrations
  version: 0.0.1
paths:
  /events:
    get:
      tags:
        - events
      summary: Get Events Route
      operationId: get_events_route_events_get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Event"
                type: array
                title: Response Get Events Route Events Get
  /events/{id}:
    get:
      tags:
        - events
      summary: Get Event Route
      operationId: get_event_route_events__id__get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            title: Id
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /events/by-name/{name}:
    get:
      tags:
        - events
      summary: Get Event By Name Route
      operationId: get_event_by_name_route_events_by_name__name__get
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            title: Name
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /events/{event_id}/registrations:
    post:
      tags:
        - events
      summary: Create Registration Route
      operationId: create_registration_route_events__event_id__registrations_post
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
            title: Event Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/Registration"
              title: Registration Data
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Registration"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /registrations/{dni}:
    get:
      tags:
        - registrations
      summary: Get Registrations By Dni Route
      operationId: get_registrations_by_dni_route_registrations__dni__get
      parameters:
        - name: dni
          in: path
          required: true
          schema:
            type: integer
            title: Dni
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Registration"
                title: Response Get Registrations By Dni Route Registrations  Dni  Get
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /registrations/{token}:
    delete:
      tags:
        - registrations
      summary: Delete Registration Route
      operationId: delete_registration_route_registrations__token__delete
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
            title: Token
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Registration"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
components:
  schemas:
    Event:
      properties:
        title:
          type: string
          title: Title
        address:
          type: string
          title: Address
        description:
          type: string
          title: Description
        max_attendees:
          type: integer
          title: Max Attendees
        attendees:
          type: object
          title: Attendees
        id:
          type: integer
          title: Id
        location:
          type: object
          title: Location
        date:
          type: string
          format: date-time
          title: Date
      type: object
      required:
        - title
        - address
        - description
        - max_attendees
        - date
      title: Event
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: "#/components/schemas/ValidationError"
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    Registration:
      properties:
        name:
          type: string
          title: Name
        email:
          type: string
          format: email
          title: Email
        phone:
          type: string
          title: Phone
        dni:
          type: integer
          title: Dni
        status:
          allOf:
            - $ref: "#/components/schemas/RegistrationStatus"
          default: pending
        event_id:
          type: integer
          title: Event Id
        id:
          type: integer
          title: Id
        token:
          anyOf:
            - type: string
          title: Token
      type: object
      required:
        - name
        - email
        - phone
        - dni
        - event_id
      title: Registration
    RegistrationStatus:
      type: string
      enum:
        - pending
        - approved
        - rejected
      title: RegistrationStatus
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
